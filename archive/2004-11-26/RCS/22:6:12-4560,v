head	1.2;
access;
symbols;
locks
	alex:1.2; strict;
comment	@# @;


1.2
date	2004.11.26.22.12.28;	author alex;	state Exp;
branches;
next	1.1;

1.1
date	2004.11.26.22.06.12;	author alex;	state Exp;
branches;
next	;


desc
@Fri Nov 26 22:06:12 2004
@


1.2
log
@Fri Nov 26 22:12:28 2004
@
text
@# 66
use YAML;
my $scale = 1;
sub bang {
    my $self = shift;
    if ($self->{bangs} % (3 * $scale) == 0
        or
        ($self->{bangs} % (4 * $scale) == (2 * $scale) and rand() > 0.2)
       ) {
        $self->{perms} ||= perms(space => 16, things => 4);
        unless($self->{combo} and @@{$self->{combo}}) {
            $self->{combo} = $self->render([10, 5, 6, 8]);
        }
        my $num = 60 + shift(@@{$self->{combo}});
        my $pan = int rand(2);
#        $self->trigger({sample => "stab/$num"});
        $self->code->[0] = "# $num";
        $self->modified;
    }
}

sub render {
    my $self = shift;
    my $result;
    my $line = shift;
    my $perms = $self->{perms};
    my $point = ($self->sin(10) * @@$perms);
    my $runlengths = $perms->[$point];
    foreach my $c (0 .. @@$runlengths -1) {
        my $note = $line->[$c % @@$line];
        push(@@$result, ($note) x $runlengths->[$c]);
    }
    return($result);
}@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
# 68
d16 1
a16 1
        $self->trigger({sample => "stab/$num"});
@
