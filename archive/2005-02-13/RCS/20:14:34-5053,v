head	1.2;
access;
symbols;
locks
	alex:1.2; strict;
comment	@# @;


1.2
date	2005.02.13.20.18.30;	author alex;	state Exp;
branches;
next	1.1;

1.1
date	2005.02.13.20.14.34;	author alex;	state Exp;
branches;
next	;


desc
@Sun Feb 13 20:14:34 2005
@


1.2
log
@Sun Feb 13 20:18:30 2005
@
text
@# hello 1.
# 7056

my $actors = [Bing->new, Shy->new, Foo->new, Bar->new];
my $stats;
my $started = 0;

sub init {
    my $self = shift;
    $self->{loop} = [];
    $self->{loopsize} = 32;
    $self->{actors} = $actors;
    $stats = $self->{stats} = {};
    $self->{init}++;
}

sub bang {
    my $self = shift;
    if (not $started and $self->{bangs} % 16) {
        return;
    }
    $started = 1;
    $self->init() unless $self->{init}; 
    foreach my $actor (@@$actors) {
        if ($actor->bang) {
            $self->t({sample => $actor->sample,
                      speed => $actor->speed,
                      shape  => $actor->shape,
                      volume => $actor->volume
                     }
                    );
            $self->line(1, $self->{bangs});
        }
    }
    $self->line(0, "hello $self->{init}.");
    $self->modified;
}

package Thing;

sub new {
    my $package = shift;
    my $p = shift;
    $p ||= {};
    bless($p, $package);
}
sub shape {0}
sub speed {
    1;
}

sub bang {
    my $self = shift;
    my $result = 0;
    my $pkg = ref($self);
    my $kind = $stats->{$pkg};
    my $other = undef;
    while (my ($key, $value) = each(%$stats)) {
        if ($key ne $pkg) {
            if (not defined $other) {
                $other = $value;
            }
            elsif ($value < $other) {
                $other = $value;
            }
        }
    }
    if (((not defined $kind) or $kind >= $self->min_distance_from_kind)
        and
        ((not defined $other) or $other >= $self->min_distance_from_other)
       ) {
       $result = 1;
       $stats->{$pkg} = 1;
    }
    else {
        $stats->{$pkg}++;
    }
    return($result);
}

sub min_distance_from_kind {
    10;
}

sub min_distance_from_other {
    6;
}

sub sample {
    0
}

sub speed {
    1
}

sub volume {
    1
}

##

package Bing;

use base qw/Thing/;

sub sample {
    'future/4'
}

sub speed {
    0.6
}

sub volume {
    0.9
}

package Shy;

use base qw/Thing/;

sub min_distance_from_kind {
    12;
}

sub min_distance_from_other {
    4;
}
sub shape { 0 }
sub sample {
    'noise/4';
}
sub speed {0.1}

package Foo;

use base qw/Thing/;

sub min_distance_from_kind {
    8;
}

sub min_distance_from_other {
    4;
}
sub speed {
    0.2
}
sub sample {
    'sid/3';
}

package Bar;

use base qw/Thing/;

sub min_distance_from_kind {
    16;
}

sub min_distance_from_other {
    6;
}

sub sample {
    'sid/5';
}

sub shape {
    0
}

sub speed {
    rand > 0.5 ? 0.2 : 0.25;
}@


1.1
log
@Initial revision
@
text
@d2 1
a2 1
# 4858
d6 1
d19 4
d130 1
a130 1
sub shape { 0.8 }
d171 1
a171 1
    0.7
@
